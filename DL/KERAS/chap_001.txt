1부. 딥러닝 기초
    딥러닝의 개념과 할 수 있는 일
    작동 원리에 대한 기본적인 내용 설명
    딥러닝을 사용하여 데이터 과학 문제를 해결하는 일반적인 흐름
    
    1장. 딥러닝이란 무엇인가?
        핵심 내용
            핵심 개념에 대한 고수준의 정의    
            머신 러닝의 발전 과정
            딥러닝이 인기를 끈 주요 요인과 미래의 가능성

1. 인공 지능과 머신 러닝, 딥러닝
    인공 지능과 머신 러닝, 딥러닝에 대한 필수적인 개념을 소개

    1.1 인공 지능
        컴퓨터가 "생각"할 수 있는가?의 질문을 하면서 시작
        정의: 보통의 사람이 수행하는 지능적인 작업을 자동화하기 위한 연구 활동
        심볼릭 AI(이전 생각): 명시적인 규칙을 충분하게 많이 만들어 지식을 다루면 인간 수준의 인공 지능을 만들 수 있다고 믿음
            체스 게임처럼 잘 정의된 논리적인 문제를 푸는 데 적합함이 증명됨
            이미지 분류, 음성 인식, 언어 번역 같은 더 복잡하고 불분명한 문제 해결하기 위한 명확한 규칙 찾기 어려움
        머신 러닝: 이전 심볼릭 AI를 대체하기 위한 새로운 방법의 등장

    1.2 머신 러닝
        "우리가 어떤 것을 작동시키기 위해 '어떻게 명령할지 알고 있는 것' 이상을 컴퓨터가 처리하는 것이 가능한가? \
        그리고 특정 작업을 수행하는 법을 스스로 학습할 수 있는가? 컴퓨터가 우리를 놀라게 할 수 있을까? \
        프로그래머가 직접 만든 데이터 처리 규칙 대신 컴퓨터가 데이터를 보고 자동으로 이런 규칙을 학습할 수 있을까?" \
        이러한 질문은 새로운 프로그래밍 패러다임의 장을 열었음
        심볼릭 AI: 규칙(프로그램)과 처리될 데이터 입력하면 해답이 출력됨
        머신러닝: 데이터와 데이터로부터 기대되는 해답을 입력하면 규칙이 출력됨
            => 이 규칙을 새로운 데이터에 적용하여 창의적인 답을 만들 수 있음
            작업과 관련 있는 많은 샘플을 제공하면 데이터에서 통계적 구조를 찾아 그 작업을 자동화하기 위한 규칙을 만들어 냄
            대량의 복잡한 데이터셋을 다루 기 때문에 베이지안 분석과 같은 전통 통계 분석 방법은 현실적으로 적용하기 힘듦
            이러한 이유로 딥러닝은 수학적 이론이 비교적 부족하고 엔지니어링 지향적, 실천적인 접근 방식으로 \
            이론보다는 경험을 바탕으로 아이디어가 증명되는 경우가 많음

    1.3 데이터에서 표현 학습
        머신 러닝 알고리즘이 하는 일이 무엇인가?
        머신 러닝: 샘플과 기댓값이 주어졌을 때 데이터 처리 작업을 위한 실행 규칙을 찾는 것
        머신 러닝 모델: 입력 데이터를 의미 있는 출력으로 변환 (알고 있는 입력과 출력의 샘플로부터 학습하는 과정)
        핵심 문제: "입력 데이터를 기반으로 기대 출력에 가깝게 만드는 유용한 표현을 (자동으로) 학습하는 것"
            표현: 데이터를 인코딩 하거나 묘사하기 위해 데이터를 바라보는 다른 방법
                ex) RGB, HUV(색상, 채도, 명도) 포맷 등 각각의 문제에 맞는 포맷 사용
            가능성 있는 공간을 사전에 정의하고 피드백 신호의 도움을 받아 입력 데이터에 대한 유용한 변환을 찾는 것
 
        머신 러닝을 하기 위해서 세 가지 필요
            - 입력 데이터 포인트: 문제가 음성 인식이면 데이터 포인트는 사람의 대화가 녹음된 사운드 파일
            - 기대 출력: 문제가 음성 인식이면 사람이 사운드 파일을 듣고 옮긴 글 (대본)
            - 알고리즘의 성능을 측정하는 방법: 알고리즘의 현재 출력과 기대 출력 간의 차이를 결정하기 위해 필요
                측정값은 알고리즘의 작동 방식을 교정하기 위한 신호로 다시 피드백 됨, 이런 수정 단계를 "학습"이라 함
        
    1.4 딥러닝에서 "딥" 이란?
        딥러닝은 연속된 층(레이어)에서 점진적으로 의미 있는 표현을 학습하는 데 강점이 있음, 데이터로부터 표현을 학습하는 새로운 방식.
        여기서 딥은 "연속된 층으로 표현을 학습 한다는 개념"
        다른 말로 "층 기반 표현 학습" 또는 "계층적 표현 학습" 이라고도 함
        얕은 학습: 작은 수의 데이터 표현 층을 학습하는 경우 (ex. 1~2개의 데이터 표현 층)
        이전에 읽었던 딥러닝과 생물학 사이를 연관 짓는 어떠한 가설도 잊는 것이 좋다
        => 딥러닝은 그냥 데이터로부터 표현을 학습하는 수학 모델일 뿐이다.

    1.5 그림 3개로 딥러닝 작동 원리 이해
        학습: 주어진 입력을 정확한 타깃에 매핑하기 위해 신경망의 모든 층에 있는 가중치 값을 찾는 것 의미
        손실함수(목적함수 또는 비용함수): 출력이 기대하는 것보다 얼마나 벗어났는지 측정
            신경망이 한 샘플에 대해 얼마나 잘 예측했는지 측정 
            신경망의 예측과 진짜 타깃의 차이를 점수로 계산
        이 점수를 피드백 신호로 사용하여 현재 샘플의 손실 점수가 감소되는 방향으로 가중치 값을 조금씩 수정.

    1.6 지금까지 딥러닝의 성과
        오랫동안 해결하기 어려웠던 시각과 청각 같은 지각 문제에서 괄목할 만한 성과를 냄
        형식 추론과 같은 다양한 문제에도 적용하기 시작

    1.7 단기간의 과대 선전을 믿지 말자
        단기간에 많이 성장할 것이라고 큰 기대를 하는 것은 위험함
        너무 기대가 크면 제 3 암흑기 올지도.. 기술적으로 가능한 것을 정확히 이해시키자
    
    1.8 AI 전망
        전망은 매우 밝음, 현재도 실제로는 적용 가능 한 것들이 많음
        장기 비전을 가져라    

    
2. 딥러닝 이전: 머신 러닝의 간략한 역사
    모든 문제에 딥러닝이 적합한 것은 아니다.
    다른 방법들을 배워 적합한 상황에 맞는 기술을 사용하자.
    간단히 설명

    2.1 확률적 모델링
        통계학 이론을 데이터 분석에 응용한 것
        - 나이브 베이즈 알고리즘이 해당 (Naive Bayes)
            나이브 베이즈: 입력 데이터의 "특성이 모두 독립적이라고 가정"(naive, 순진한)하고 베이즈 정리를 적용하는 머신 러닝 분류 알고리즘
        - 로지스틱 회귀(logreg)
            나이브 베이즈 알고리즘과 밀접하게 연관된 모델
            이름과 달리 회귀 알고리즘이 아닌 "분류 알고리즘"
            머신러닝계의 "Hello World"

    2.2 초창기 신경망
        딥러닝의 기원을 아는 것은 유익
        성공적인 첫 번째 신경망 애플리케이션은 1989년 Bell Labs에서 나옴
        얀 르쿤(Yann LeCun)은 초창기 합성곱 신경망과 역전파를 연결하여 손글씨 숫자 이미지를 분류하는 문제에 적용함
        - LeNet : 우편 봉투의 우편 변호 코드를 자동으로 읽기 위해 1990년대 미국 우편 서비스에 사용된 신경망

    2.3 커널 방법
        머신 러닝의 새로운 접근 방법인 "커널 방법"이 인기를 얻자 초기 신경망은 빠르게 잊혀짐
        커널 방법: 분류 알고리즘의 한 종류, 이 중 서포트 벡터 머신(SVM)이 가장 유명함
            - SVM : 1990년대 초 Bell Labs의 블라드미르 바프닉과 코리나 코르테스에 의해 개발, 1995년 공개, 1963년 선형 공식 공개
                    분류 문제 해결을 위해 2개의 다른 범주에 속한 데이터 포인트 그룹 사이에 좋은 결정 경계(Decision boundary, 경계선)을 찾음
                    결정 경계: 훈련 데이터를 2개의 범주에 대응하는 영역으로 나누는 직선이나 표면으로 생각 가능
                    새로운 데이터 포인트를 분류하려면 결정 경계 어느 쪽에 속하는지를 확인하기만 하면 됨

                - 결정 경계 찾는 과정 : 2 단계
                    1. 결정 경계가 하나의 초평면(hyperpl)   

    2.4 결정 트리
    
    2.5 다시 신경망으로
    
    2.6 딥러닝의 특징
    
    2.7 머신 러닝의 최근 동향


